pipeline {
    agent none
    stages {
        stage('Preparation') {
            agent none
            steps {
                slackSend message: "Running ${JOB_NAME}..."
            }
        }
        stage('Checkout') {
            agent { label 'master' }
            steps {
                echo 'Cleaning workspace...'
                cleanWs()
                echo 'Checking out branch...'
                git branch: 'release/stage', credentialsId: '33e2377c-9a9f-4a0d-b1b1-4984306a93f8', url: 'git@bitbucket.org:aftsoftwareteam/connect.git'
            }
        }
        stage('Install') {
            agent { label 'master' }
            steps {
                echo 'Installing...'
                sh 'composer install'
                sh 'npm install'
            }
        }
        stage('Build') {
            agent { label 'master' }
            steps {
                echo 'Building...'
                sh 'npm run dev'
                sh 'php artisan aftdb:clean'
                sh 'php artisan aftdb:create'
                sh 'composer update nothing'
            }
        }
        stage('Test') {
            agent { label 'master' }
            steps {
                echo 'Testing...'
                sh 'phpunit'
            }
        }
        stage('Stash') {
            agent { label 'master' }
            steps {
                echo 'Stashing...'
                stash name: 'files', useDefaultExcludes: false
            }
        }
        stage('Deploy') {
            parallel {
                stage('Deploy Web1') {
                    agent { label 'stage-web1' }
                    steps {
                        dir("${env.JENKINS_HOME}/deploy/connect/") {
                            unstash 'files'
                            sh 'sudo wwwdeploy'
                        }
                    }
                }
                stage('Deploy Web2') {
                    agent { label 'stage-web2' }
                    steps {
                        dir("${env.JENKINS_HOME}/deploy/connect/") {
                            unstash 'files'
                            sh 'sudo wwwdeploy'
                        }
                    }
                }
            }
        }
    }
    post {
        success {
            slackSend color: 'good', message: "${JOB_NAME} completed successfully!"
        }
        unstable {
            slackSend color: 'warning', message: "${JOB_NAME} completed, but is unstable!"
        }
        failure {
            slackSend color: 'danger', message: "${JOB_NAME} failed!"
        }
    }
}
